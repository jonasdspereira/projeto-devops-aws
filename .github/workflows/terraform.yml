name: Terraform Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      destroy:
        description: "Destruir infraestrutura"
        type: boolean
        required: true
        default: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    # Só executa se não for uma destruição manual
    if: github.event_name != 'workflow_dispatch' || !github.event.inputs.destroy

    steps:
      # 1. Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar o AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Instalar o Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # 4. Inicializar o Terraform
      - name: Terraform Init
        run: terraform init

      # 5. Validar a configuração do Terraform
      - name: Terraform Validate
        run: terraform validate

      # 6. Planejar as mudanças
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # 7. Aplicar as mudanças (opcional, apenas em `main`)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
