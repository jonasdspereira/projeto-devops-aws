name: Terraform Destroy

on:
  workflow_dispatch:  # Execução manual

jobs:
  terraform_destroy:
    runs-on: ubuntu-latest
    environment: production  # Requer aprovação manual no GitHub

    if: github.ref == 'refs/heads/main'  # Só executa na main

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan Destroy
        run: terraform plan -destroy -out=destroy.tfplan

      - name: Terraform Destroy
        run: terraform apply -auto-approve destroy.tfplan

      - name: Cleanup Orphaned Resources
        if: always()
        run: |
          echo "Limpando recursos órfãos..."
          # Exemplo: limpar bucket temporário
          aws s3 rm s3://seu-bucket-temp --recursive || echo "Nenhum bucket temporário encontrado"
          # Adicione outros scripts de limpeza conforme necessário

      - name: Upload Destroy Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: terraform-destroy-logs
          path: .